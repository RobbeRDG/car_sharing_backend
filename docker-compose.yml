version: "3.8"

services:
  reverse-proxy:
    image: traefik:v2.4
    command: --api.insecure=true --providers.docker
    ports:
      - "80:80"
      - "8081:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - backend-services

  service-registry:
    container_name: service-registry
    image: robberdg/service-registry:latest
    ports:
      - 8761:8761
    networks:
      - backend-services

  api-gateway:
    container_name: api-gateway
    image: robberdg/api-gateway:latest
    ports:
      - 8080:8080
    networks:
      - backend-services
    environment:
      - EUREKA=http://service-registry:8761/eureka
    labels:
      - "traefik.http.routers.whoami.rule=Host(`api-gateway`)"

  user-service:
    container_name: user-service
    image: robberdg/user-service:latest
    expose:
      - 9001
    networks:
      - backend-services
    environment:
      - EUREKA=http://service-registry:8761/eureka

  car-service:
    container_name: car-service
    image: robberdg/car-service:latest
    expose:
      - 9002
    networks:
      - backend-services
    environment:
      - EUREKA=http://service-registry:8761/eureka

  ride-service:
    container_name: ride-service
    image: robberdg/ride-service:latest
    expose:
      - 9003
    networks:
      - backend-services
    environment:
      - EUREKA=http://service-registry:8761/eureka


  billing-service:
    container_name: billing-service
    image: robberdg/billing-service:latest
    expose:
      - 9004
    networks:
      - backend-services
    environment:
      - EUREKA=http://service-registry:8761/eureka

  whoami:
    image: traefik/whoami
    labels:
      - "traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)"
    networks:
      - backend-services

networks:
  backend-services:
    driver: bridge